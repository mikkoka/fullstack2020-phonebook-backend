{"version":3,"sources":["components/PersonForm.js","services/Persons.js","App.js","index.js"],"names":["PersonForm","addNumber","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","value","onChange","type","url","e","getAll","axios","get","then","response","data","create","newPerson","post","deletePerson","personKey","delete","updatePerson","updatedPerson","id","put","Filter","nameFilter","handleFilterChange","PersonList","filterShownNumbers","persons","handleDeleteClickOf","filter","map","p","name","number","onClick","Notification","message","notificationStyle","style","className","App","useState","setNewName","setNewNumber","setNameFilter","setPersons","notificationMessage","setNotificationMessage","setNotificationStyle","updateNotificationMessage","msg","setTimeout","successStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","errorStyle","useEffect","personService","event","preventDefault","tempPerson","foundPerson","find","person","window","confirm","catch","error","concat","join","target","toLowerCase","startsWith","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72c36909.chunk.js","sourcesContent":["const PersonForm = ({addNumber, newName, newNumber, handleNameChange, handleNumberChange}) => {\n    return (\n      <form onSubmit={addNumber} >\n      <div>\n        name: <input \n          value={newName} \n          onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input \n          value={newNumber === 0 ? '' : newNumber} \n          onChange={handleNumberChange}/>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n    ) \n  }\n\n  export default PersonForm","import axios from 'axios'\n\nconst url = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(url)\n    return request.then(response => response.data)\n}\nconst create = (newPerson) => {\n    const request = axios.post(url, newPerson)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = (personKey) => {\n    const request = axios.delete(`${url}/${personKey}`)\n    return request.then(response => response.data)\n}\n\nconst updatePerson = (updatedPerson, id) => {\n    const request = axios.put(`${url}/${id}`, updatedPerson)\n    return request.then(response => response.data)\n}\n\nconst e = {  getAll, create, deletePerson, updatePerson }\n\nexport default e\n  ","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/Persons'\nimport './App.css'\n\nconst App = () => {\n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState(0)\n  const [ nameFilter, setNameFilter ] = useState('')\n  const [ persons, setPersons ] = useState([])\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\n  const [ notificationStyle, setNotificationStyle ] = useState({})\n  \n  const updateNotificationMessage = (msg, style) => {\n    setNotificationStyle(style)\n    setNotificationMessage(msg)       \n    setTimeout(() => {\n      setNotificationMessage(null)\n    } ,5000)\n  }\n  const successStyle = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n  const errorStyle = {\n    color: 'red',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n   \n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => setPersons(response))\n  }, [])\n\n  const addNumber = (event) => {\n    event.preventDefault()\n    const tempPerson = \n    { \n      name: newName,\n      number: newNumber\n    }\n    const foundPerson = persons.find(person => person.name === newName)\n    if (typeof foundPerson !== 'undefined') {\n      if (window.confirm(`${newName} is already in the phonebook. Update phonenumber?`)) {\n        const id = foundPerson.id\n        const updatedPerson = { ...foundPerson, number: newNumber }\n        personService.updatePerson(tempPerson, id)\n        .then(updateNotificationMessage(`${tempPerson.name} succesfully updated!`, successStyle))\n        .catch(error => {\n          updateNotificationMessage(`Person ${tempPerson.name} has already been removed`, errorStyle)\n        })\n        setPersons(persons.map(p => p.id !== updatedPerson.id ? p : updatedPerson))\n      \n      }\n    }\n      else {\n\n      personService.create(tempPerson)\n        .then((response) => setPersons(persons.concat(response)))\n        .then(updateNotificationMessage(`${tempPerson.name} succesfully added!`, successStyle))\n        .catch(error => updateNotificationMessage(error.response.data.join('\\n'), errorStyle))\n    }      \n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleDeleteClickOf = personKey => {\n    personService.deletePerson(personKey)\n    .then(updateNotificationMessage(`Entry ${personKey} succesfully deleted.`, successStyle))\n    setPersons(persons.filter(person => person.id !== personKey))\n    \n  }\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterChange = (event) => setNameFilter(event.target.value)\n  const filterShownNumbers = person => person.name.toLowerCase().startsWith(nameFilter.toLowerCase())\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} \n                    notificationStyle={notificationStyle} />\n      <Filter       addNumber={addNumber} \n                    nameFilter={nameFilter} \n                    handleFilterChange={handleFilterChange} \n      />\n      <h2>add a new</h2>\n      <PersonForm   addNumber={addNumber} \n                    newName={newName} \n                    newNumber={newNumber} \n                    handleNameChange={handleNameChange} \n                    handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <PersonList   filterShownNumbers={filterShownNumbers}\n                    persons={persons}\n                    handleDeleteClickOf={handleDeleteClickOf}\n      />\n </div>\n  )\n\n}\nconst Filter = ({addNumber, nameFilter, handleFilterChange}) => {\n  return (\n    <form onSubmit={addNumber} >\n    <div>\n      filter shown with: <input value={nameFilter} onChange={handleFilterChange} />\n    </div>\n  </form>\n  )\n}\n\nconst PersonList = ({filterShownNumbers, persons, handleDeleteClickOf}) => {\n  return (\n    <ul>\n    {persons.filter(filterShownNumbers).map(p => <li key={p.id}>{p.name} {p.number} <button onClick={() => handleDeleteClickOf(p.id)}>delete</button></li>)}\n    </ul>\n  )\n}\n\nconst Notification = ({ message, notificationStyle }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div style={notificationStyle} className=\"notification\">\n      {message}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}